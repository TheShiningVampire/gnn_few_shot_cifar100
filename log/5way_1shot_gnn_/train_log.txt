todo             : train
dataset          : cifar100
model_type       : gnn
pretrain         : False
pretrain_dir     : 
use_gpu          : 0
seed             : 1
batch_size       : 16
lr               : 0.01
max_iteration    : 100000
log_interval     : 100
eval_interval    : 2000
early_stop       : 5
early_stop_pretrain : 5
test_dir         : 
data_root        : data
log_root         : log
model_root       : model
affix            : 
save             : False
load             : False
load_dir         : 
output_dir       : output
output_name      : output.txt
nway             : 5
shots            : 1
freeze_cnn       : False
model_folder     : model\5way_1shot_gnn_
log_folder       : log\5way_1shot_gnn_
gnnModel(
  (cnn_feature): EmbeddingCNN(
    (module_list): ModuleList(
      (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (3): LeakyReLU(negative_slope=0.1, inplace=True)
      (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (7): LeakyReLU(negative_slope=0.1, inplace=True)
      (8): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (11): LeakyReLU(negative_slope=0.1, inplace=True)
      (12): Conv2d(128, 64, kernel_size=(4, 4), stride=(1, 1), bias=False)
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (gnn): GNN(
    (gnn_obj): GNN_module(
      (adjacency_list): ModuleList(
        (0): Adjacency_layer(
          (module_list): ModuleList(
            (0): Conv2d(69, 64, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): LeakyReLU(negative_slope=0.01)
            (6): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (1): Adjacency_layer(
          (module_list): ModuleList(
            (0): Conv2d(85, 64, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
            (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): LeakyReLU(negative_slope=0.01)
            (6): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
      (graph_conv_list): ModuleList(
        (0): Graph_conv_block(
          (weight): Linear(in_features=69, out_features=16, bias=True)
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Graph_conv_block(
          (weight): Linear(in_features=85, out_features=16, bias=True)
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (last_adjacency): Adjacency_layer(
        (module_list): ModuleList(
          (0): Conv2d(101, 64, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): LeakyReLU(negative_slope=0.01)
          (3): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
          (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): LeakyReLU(negative_slope=0.01)
          (6): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (last_conv): Graph_conv_block(
        (weight): Linear(in_features=101, out_features=5, bias=True)
      )
    )
  )
)
iter: 0, spent: 1.8727 s, tr loss: 1.69601
================== eval ==================
iter: 0, va loss: 2.00482, va acc: 20.5929 %
==========================================
iter: 100, spent: 2.9430 s, tr loss: 1.66566
iter: 200, spent: 3.1990 s, tr loss: 1.63251
iter: 300, spent: 2.8511 s, tr loss: 1.62388
iter: 400, spent: 2.8952 s, tr loss: 1.62010
iter: 500, spent: 2.9518 s, tr loss: 1.61196
iter: 600, spent: 2.9224 s, tr loss: 1.61883
iter: 700, spent: 2.9544 s, tr loss: 1.61530
iter: 800, spent: 2.9126 s, tr loss: 1.61239
iter: 900, spent: 3.1009 s, tr loss: 1.61445
iter: 1000, spent: 2.8134 s, tr loss: 1.61255
iter: 1100, spent: 2.9013 s, tr loss: 1.61386
iter: 1200, spent: 2.8480 s, tr loss: 1.61191
iter: 1300, spent: 2.9179 s, tr loss: 1.60990
iter: 1400, spent: 2.9109 s, tr loss: 1.60489
iter: 1500, spent: 2.8051 s, tr loss: 1.61385
iter: 1600, spent: 2.8655 s, tr loss: 1.60424
iter: 1700, spent: 2.9014 s, tr loss: 1.60843
iter: 1800, spent: 2.9295 s, tr loss: 1.59346
iter: 1900, spent: 3.1154 s, tr loss: 1.58918
iter: 2000, spent: 2.8930 s, tr loss: 1.58133
================== eval ==================
iter: 2000, va loss: 1.58000, va acc: 26.3421 %
==========================================
iter: 2100, spent: 3.0643 s, tr loss: 1.58145
iter: 2200, spent: 2.9888 s, tr loss: 1.56848
iter: 2300, spent: 3.1108 s, tr loss: 1.57140
iter: 2400, spent: 2.9982 s, tr loss: 1.56019
iter: 2500, spent: 3.0061 s, tr loss: 1.56880
iter: 2600, spent: 3.1497 s, tr loss: 1.55824
iter: 2700, spent: 3.2692 s, tr loss: 1.55951
iter: 2800, spent: 2.9006 s, tr loss: 1.54959
iter: 2900, spent: 3.0922 s, tr loss: 1.56829
iter: 3000, spent: 3.0868 s, tr loss: 1.55179
iter: 3100, spent: 2.9437 s, tr loss: 1.54413
iter: 3200, spent: 3.1325 s, tr loss: 1.55283
iter: 3300, spent: 2.9310 s, tr loss: 1.51440
iter: 3400, spent: 3.2622 s, tr loss: 1.54465
iter: 3500, spent: 3.4162 s, tr loss: 1.53515
iter: 3600, spent: 3.6168 s, tr loss: 1.54039
iter: 3700, spent: 3.5778 s, tr loss: 1.51672
iter: 3800, spent: 3.3770 s, tr loss: 1.51902
iter: 3900, spent: 3.3419 s, tr loss: 1.54409
iter: 4000, spent: 3.3196 s, tr loss: 1.51108
================== eval ==================
iter: 4000, va loss: 1.52371, va acc: 33.8141 %
==========================================
iter: 4100, spent: 3.2213 s, tr loss: 1.53497
iter: 4200, spent: 3.4454 s, tr loss: 1.52317
iter: 4300, spent: 3.3948 s, tr loss: 1.52377
iter: 4400, spent: 3.1452 s, tr loss: 1.51758
iter: 4500, spent: 3.2434 s, tr loss: 1.50262
iter: 4600, spent: 3.2160 s, tr loss: 1.50387
iter: 4700, spent: 3.1857 s, tr loss: 1.50862
iter: 4800, spent: 3.4237 s, tr loss: 1.49975
iter: 4900, spent: 3.1086 s, tr loss: 1.49996
iter: 5000, spent: 3.4060 s, tr loss: 1.49721
iter: 5100, spent: 3.3732 s, tr loss: 1.51036
iter: 5200, spent: 3.3265 s, tr loss: 1.49847
iter: 5300, spent: 3.3109 s, tr loss: 1.47158
iter: 5400, spent: 3.1888 s, tr loss: 1.48724
iter: 5500, spent: 3.2894 s, tr loss: 1.46950
iter: 5600, spent: 3.5029 s, tr loss: 1.46056
iter: 5700, spent: 3.2030 s, tr loss: 1.50698
iter: 5800, spent: 3.4461 s, tr loss: 1.48378
iter: 5900, spent: 3.2858 s, tr loss: 1.48306
iter: 6000, spent: 3.3318 s, tr loss: 1.48296
================== eval ==================
iter: 6000, va loss: 1.51552, va acc: 32.5120 %
==========================================
iter: 6100, spent: 3.3865 s, tr loss: 1.49177
iter: 6200, spent: 3.8600 s, tr loss: 1.46259
iter: 6300, spent: 3.9822 s, tr loss: 1.45762
iter: 6400, spent: 3.3821 s, tr loss: 1.48154
iter: 6500, spent: 3.4208 s, tr loss: 1.45964
iter: 6600, spent: 3.3460 s, tr loss: 1.48630
iter: 6700, spent: 3.3376 s, tr loss: 1.45270
iter: 6800, spent: 3.1898 s, tr loss: 1.45982
iter: 6900, spent: 3.2670 s, tr loss: 1.47016
iter: 7000, spent: 3.3436 s, tr loss: 1.46341
iter: 7100, spent: 3.3472 s, tr loss: 1.48746
iter: 7200, spent: 3.2631 s, tr loss: 1.45556
iter: 7300, spent: 3.2162 s, tr loss: 1.46360
iter: 7400, spent: 3.3672 s, tr loss: 1.50229
iter: 7500, spent: 3.3352 s, tr loss: 1.45561
iter: 7600, spent: 3.2229 s, tr loss: 1.46907
iter: 7700, spent: 3.4577 s, tr loss: 1.47767
iter: 7800, spent: 3.4007 s, tr loss: 1.45962
iter: 7900, spent: 3.2840 s, tr loss: 1.46257
iter: 8000, spent: 3.7158 s, tr loss: 1.46459
================== eval ==================
iter: 8000, va loss: 1.48629, va acc: 34.3149 %
==========================================
iter: 8100, spent: 3.3468 s, tr loss: 1.47077
iter: 8200, spent: 3.3522 s, tr loss: 1.45986
iter: 8300, spent: 3.2901 s, tr loss: 1.46191
iter: 8400, spent: 3.3706 s, tr loss: 1.44985
iter: 8500, spent: 3.4357 s, tr loss: 1.47236
iter: 8600, spent: 3.6143 s, tr loss: 1.48269
iter: 8700, spent: 3.2627 s, tr loss: 1.45903
iter: 8800, spent: 3.3652 s, tr loss: 1.42367
iter: 8900, spent: 3.4468 s, tr loss: 1.46573
iter: 9000, spent: 3.3994 s, tr loss: 1.44612
iter: 9100, spent: 3.2988 s, tr loss: 1.44787
iter: 9200, spent: 3.2846 s, tr loss: 1.47203
iter: 9300, spent: 3.2464 s, tr loss: 1.45298
iter: 9400, spent: 3.3666 s, tr loss: 1.45664
iter: 9500, spent: 3.2439 s, tr loss: 1.43604
iter: 9600, spent: 3.3474 s, tr loss: 1.47989
iter: 9700, spent: 3.2538 s, tr loss: 1.44687
iter: 9800, spent: 3.3080 s, tr loss: 1.45366
iter: 9900, spent: 3.3064 s, tr loss: 1.45229
iter: 10000, spent: 3.2358 s, tr loss: 1.42398
================== eval ==================
iter: 10000, va loss: 1.47163, va acc: 36.0577 %
==========================================
iter: 10100, spent: 3.1326 s, tr loss: 1.44139
iter: 10200, spent: 3.3398 s, tr loss: 1.43033
iter: 10300, spent: 3.3391 s, tr loss: 1.42668
iter: 10400, spent: 3.1131 s, tr loss: 1.44484
iter: 10500, spent: 3.3145 s, tr loss: 1.40949
iter: 10600, spent: 3.0440 s, tr loss: 1.44922
iter: 10700, spent: 3.2896 s, tr loss: 1.42347
iter: 10800, spent: 3.2890 s, tr loss: 1.45190
iter: 10900, spent: 3.2375 s, tr loss: 1.44002
iter: 11000, spent: 3.3830 s, tr loss: 1.42086
iter: 11100, spent: 3.1565 s, tr loss: 1.45326
iter: 11200, spent: 3.2981 s, tr loss: 1.43535
iter: 11300, spent: 3.2326 s, tr loss: 1.43535
iter: 11400, spent: 3.2334 s, tr loss: 1.44379
iter: 11500, spent: 3.5784 s, tr loss: 1.43375
iter: 11600, spent: 3.1722 s, tr loss: 1.41534
iter: 11700, spent: 3.3619 s, tr loss: 1.42716
iter: 11800, spent: 3.2352 s, tr loss: 1.42256
iter: 11900, spent: 3.4637 s, tr loss: 1.43687
iter: 12000, spent: 3.2632 s, tr loss: 1.42216
================== eval ==================
iter: 12000, va loss: 1.51280, va acc: 35.8574 %
==========================================
iter: 12100, spent: 3.4405 s, tr loss: 1.40577
iter: 12200, spent: 3.2162 s, tr loss: 1.40242
iter: 12300, spent: 3.2275 s, tr loss: 1.38129
iter: 12400, spent: 3.1843 s, tr loss: 1.41937
iter: 12500, spent: 3.1380 s, tr loss: 1.42733
iter: 12600, spent: 3.4262 s, tr loss: 1.43669
iter: 12700, spent: 3.2322 s, tr loss: 1.39863
iter: 12800, spent: 3.2309 s, tr loss: 1.39428
iter: 12900, spent: 3.2205 s, tr loss: 1.39788
iter: 13000, spent: 3.2745 s, tr loss: 1.42968
iter: 13100, spent: 3.3515 s, tr loss: 1.42963
iter: 13200, spent: 3.0888 s, tr loss: 1.43781
iter: 13300, spent: 3.3947 s, tr loss: 1.37593
iter: 13400, spent: 3.2161 s, tr loss: 1.39666
iter: 13500, spent: 3.2970 s, tr loss: 1.39345
iter: 13600, spent: 3.4243 s, tr loss: 1.41687
iter: 13700, spent: 3.2194 s, tr loss: 1.38634
iter: 13800, spent: 3.4748 s, tr loss: 1.38305
iter: 13900, spent: 3.4549 s, tr loss: 1.35614
iter: 14000, spent: 3.4576 s, tr loss: 1.39901
================== eval ==================
iter: 14000, va loss: 1.46083, va acc: 37.6603 %
==========================================
iter: 14100, spent: 3.0753 s, tr loss: 1.40316
iter: 14200, spent: 3.2004 s, tr loss: 1.39149
iter: 14300, spent: 3.3322 s, tr loss: 1.38802
iter: 14400, spent: 3.5222 s, tr loss: 1.36103
iter: 14500, spent: 3.3313 s, tr loss: 1.40723
iter: 14600, spent: 3.1060 s, tr loss: 1.37265
iter: 14700, spent: 3.3259 s, tr loss: 1.38316
iter: 14800, spent: 3.1232 s, tr loss: 1.38638
iter: 14900, spent: 3.2533 s, tr loss: 1.39495
iter: 15000, spent: 3.2877 s, tr loss: 1.35025
iter: 15100, spent: 3.1710 s, tr loss: 1.36931
iter: 15200, spent: 3.3219 s, tr loss: 1.37077
iter: 15300, spent: 3.1990 s, tr loss: 1.36283
iter: 15400, spent: 3.2799 s, tr loss: 1.36508
iter: 15500, spent: 3.1627 s, tr loss: 1.39700
iter: 15600, spent: 3.3316 s, tr loss: 1.36873
iter: 15700, spent: 3.2014 s, tr loss: 1.36744
iter: 15800, spent: 3.2459 s, tr loss: 1.36523
iter: 15900, spent: 3.2474 s, tr loss: 1.35308
iter: 16000, spent: 3.1396 s, tr loss: 1.37800
================== eval ==================
iter: 16000, va loss: 1.45092, va acc: 36.6386 %
==========================================
iter: 16100, spent: 3.2157 s, tr loss: 1.37537
iter: 16200, spent: 3.2742 s, tr loss: 1.34532
iter: 16300, spent: 3.2771 s, tr loss: 1.36745
iter: 16400, spent: 3.5209 s, tr loss: 1.37190
iter: 16500, spent: 3.1737 s, tr loss: 1.34734
iter: 16600, spent: 3.2568 s, tr loss: 1.35727
iter: 16700, spent: 3.8739 s, tr loss: 1.38378
iter: 16800, spent: 3.4292 s, tr loss: 1.37188
iter: 16900, spent: 3.3229 s, tr loss: 1.38445
iter: 17000, spent: 3.4934 s, tr loss: 1.34934
iter: 17100, spent: 3.3197 s, tr loss: 1.38154
iter: 17200, spent: 3.2252 s, tr loss: 1.38142
iter: 17300, spent: 3.2086 s, tr loss: 1.36388
iter: 17400, spent: 3.1295 s, tr loss: 1.36103
iter: 17500, spent: 3.5673 s, tr loss: 1.33252
iter: 17600, spent: 3.1497 s, tr loss: 1.33699
iter: 17700, spent: 3.2147 s, tr loss: 1.31997
iter: 17800, spent: 3.2945 s, tr loss: 1.33647
iter: 17900, spent: 3.2147 s, tr loss: 1.35621
iter: 18000, spent: 3.3192 s, tr loss: 1.36924
================== eval ==================
iter: 18000, va loss: 1.44269, va acc: 38.3013 %
==========================================
iter: 18100, spent: 3.3268 s, tr loss: 1.36332
iter: 18200, spent: 3.1536 s, tr loss: 1.35451
iter: 18300, spent: 3.2250 s, tr loss: 1.34704
iter: 18400, spent: 3.2743 s, tr loss: 1.30778
iter: 18500, spent: 3.2351 s, tr loss: 1.32756
iter: 18600, spent: 3.3063 s, tr loss: 1.32391
iter: 18700, spent: 3.2143 s, tr loss: 1.35955
iter: 18800, spent: 3.3092 s, tr loss: 1.37055
iter: 18900, spent: 3.2466 s, tr loss: 1.34210
iter: 19000, spent: 3.2352 s, tr loss: 1.35632
iter: 19100, spent: 3.4004 s, tr loss: 1.35787
iter: 19200, spent: 3.3906 s, tr loss: 1.32548
iter: 19300, spent: 3.3430 s, tr loss: 1.35166
iter: 19400, spent: 3.2160 s, tr loss: 1.32794
iter: 19500, spent: 3.2325 s, tr loss: 1.34186
iter: 19600, spent: 3.2914 s, tr loss: 1.33873
iter: 19700, spent: 3.1952 s, tr loss: 1.33207
iter: 19800, spent: 3.2883 s, tr loss: 1.35317
iter: 19900, spent: 3.2812 s, tr loss: 1.31209
iter: 20000, spent: 3.1957 s, tr loss: 1.29821
================== eval ==================
iter: 20000, va loss: 1.52038, va acc: 34.7155 %
==========================================
iter: 20100, spent: 3.1212 s, tr loss: 1.34696
iter: 20200, spent: 3.3262 s, tr loss: 1.33796
iter: 20300, spent: 3.2612 s, tr loss: 1.33449
iter: 20400, spent: 3.2426 s, tr loss: 1.30373
iter: 20500, spent: 3.2329 s, tr loss: 1.33267
iter: 20600, spent: 3.2009 s, tr loss: 1.34216
iter: 20700, spent: 3.3290 s, tr loss: 1.33411
iter: 20800, spent: 3.1836 s, tr loss: 1.30035
iter: 20900, spent: 3.3009 s, tr loss: 1.30302
iter: 21000, spent: 3.1736 s, tr loss: 1.30454
iter: 21100, spent: 3.2557 s, tr loss: 1.34235
iter: 21200, spent: 3.2868 s, tr loss: 1.30294
iter: 21300, spent: 3.0757 s, tr loss: 1.28862
iter: 21400, spent: 3.2771 s, tr loss: 1.32162
iter: 21500, spent: 3.2233 s, tr loss: 1.33817
iter: 21600, spent: 3.3818 s, tr loss: 1.29775
iter: 21700, spent: 3.2974 s, tr loss: 1.32885
iter: 21800, spent: 3.1274 s, tr loss: 1.31430
iter: 21900, spent: 3.2481 s, tr loss: 1.33815
iter: 22000, spent: 3.1526 s, tr loss: 1.31176
================== eval ==================
iter: 22000, va loss: 1.48982, va acc: 36.2380 %
==========================================
iter: 22100, spent: 3.2637 s, tr loss: 1.28677
iter: 22200, spent: 3.5517 s, tr loss: 1.27979
iter: 22300, spent: 3.3608 s, tr loss: 1.30581
iter: 22400, spent: 3.2835 s, tr loss: 1.30321
iter: 22500, spent: 3.2304 s, tr loss: 1.32688
iter: 22600, spent: 3.1728 s, tr loss: 1.29179
iter: 22700, spent: 3.2237 s, tr loss: 1.32971
iter: 22800, spent: 3.3046 s, tr loss: 1.28568
iter: 22900, spent: 3.2369 s, tr loss: 1.30944
iter: 23000, spent: 3.2843 s, tr loss: 1.26217
iter: 23100, spent: 3.1881 s, tr loss: 1.30016
iter: 23200, spent: 3.2561 s, tr loss: 1.29223
iter: 23300, spent: 3.3576 s, tr loss: 1.29011
iter: 23400, spent: 3.1235 s, tr loss: 1.32146
iter: 23500, spent: 3.1769 s, tr loss: 1.30353
iter: 23600, spent: 3.1511 s, tr loss: 1.28908
iter: 23700, spent: 3.1882 s, tr loss: 1.30460
iter: 23800, spent: 3.2835 s, tr loss: 1.27311
iter: 23900, spent: 3.3079 s, tr loss: 1.28859
iter: 24000, spent: 3.3272 s, tr loss: 1.30713
================== eval ==================
iter: 24000, va loss: 1.50067, va acc: 35.3165 %
==========================================
iter: 24100, spent: 3.2564 s, tr loss: 1.28637
iter: 24200, spent: 3.2626 s, tr loss: 1.26685
iter: 24300, spent: 3.2891 s, tr loss: 1.30263
iter: 24400, spent: 3.3800 s, tr loss: 1.27184
iter: 24500, spent: 3.1767 s, tr loss: 1.32481
iter: 24600, spent: 3.3548 s, tr loss: 1.27241
iter: 24700, spent: 3.2012 s, tr loss: 1.26903
iter: 24800, spent: 3.2646 s, tr loss: 1.28512
iter: 24900, spent: 3.2915 s, tr loss: 1.29995
iter: 25000, spent: 3.0599 s, tr loss: 1.28500
iter: 25100, spent: 3.2098 s, tr loss: 1.27727
iter: 25200, spent: 3.1595 s, tr loss: 1.28953
iter: 25300, spent: 3.1654 s, tr loss: 1.28393
iter: 25400, spent: 3.3004 s, tr loss: 1.27584
iter: 25500, spent: 3.3158 s, tr loss: 1.25814
iter: 25600, spent: 3.2881 s, tr loss: 1.29526
iter: 25700, spent: 3.2339 s, tr loss: 1.29309
iter: 25800, spent: 3.4081 s, tr loss: 1.30752
iter: 25900, spent: 3.3999 s, tr loss: 1.31181
iter: 26000, spent: 3.7784 s, tr loss: 1.26960
================== eval ==================
iter: 26000, va loss: 1.47956, va acc: 36.9591 %
==========================================
iter: 26100, spent: 2.8538 s, tr loss: 1.30649
iter: 26200, spent: 2.8871 s, tr loss: 1.25154
iter: 26300, spent: 2.8875 s, tr loss: 1.29825
iter: 26400, spent: 2.9650 s, tr loss: 1.26452
iter: 26500, spent: 2.9639 s, tr loss: 1.26222
iter: 26600, spent: 3.0385 s, tr loss: 1.27227
iter: 26700, spent: 3.0134 s, tr loss: 1.31420
iter: 26800, spent: 3.0291 s, tr loss: 1.25896
iter: 26900, spent: 3.3607 s, tr loss: 1.30427
iter: 27000, spent: 3.4631 s, tr loss: 1.26247
iter: 27100, spent: 3.2847 s, tr loss: 1.27653
iter: 27200, spent: 3.4707 s, tr loss: 1.28877
iter: 27300, spent: 3.4336 s, tr loss: 1.28744
iter: 27400, spent: 3.4127 s, tr loss: 1.24664
iter: 27500, spent: 3.2635 s, tr loss: 1.28651
iter: 27600, spent: 3.3968 s, tr loss: 1.26901
iter: 27700, spent: 3.5029 s, tr loss: 1.23812
iter: 27800, spent: 3.4722 s, tr loss: 1.29274
iter: 27900, spent: 3.3123 s, tr loss: 1.26049
iter: 28000, spent: 3.4106 s, tr loss: 1.29449
================== eval ==================
iter: 28000, va loss: 1.45950, va acc: 37.8005 %
==========================================
============= best result ===============
best loss: 1.44269, best acc: 38.3013 %
